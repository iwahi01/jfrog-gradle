buildscript {
    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
        
    }
    dependencies {
        //Check for the latest version here: http://plugins.gradle.org/plugin/com.jfrog.artifactory
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4+"
    }
}
/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.8.1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'maven'
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

//String globalVersion = new Version(currentVersion)

allprojects {
    apply plugin: "com.jfrog.artifactory"
    group = 'iwashita.example'
	version = currentVersion
}

artifactory {
    contextUrl = "${artifactory_contextUrl}"   //The base Artifactory URL if not overridden by the publisher/resolver
    //println "version=" + version
    String repo = version.endsWith('-SNAPSHOT') ? 'gradle-dev-local' : 'gradle-release-local' 
    publish {
        repository {
            repoKey = repo
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
            
        }
        defaults {
            publishConfigs('archives', 'published')
        }
    }
    resolve {
        repository {
            repoKey = repo
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
            
        }
    }
    clientConfig.setIncludeEnvVars(true)
    //clientConfig.info.setBuildName('Gradle Artifactoryプラグイン(Eclipse連携)')
    //clientConfig.info.setBuildNumber('' + new java.util.Random(System.currentTimeMillis()).nextInt(20000))
}

jar {
    manifest {
        attributes 'Main-Class': 'iwashita.example.hello.Hello'
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

javadoc {
    options.charSet = 'UTF-8'
    options.encoding = 'UTF-8'
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

artifacts {
    archives javadocJar
    archives sourcesJar
}
